@(dkey:String, qiIdOpt:Option[String], uSettings:models.MDomainUserSettings, isSiteAdmin:Boolean = false, wsTimestamp:Option[Long] = None)(implicit ctx:util.Context)
@* sio renderer v2
    
Шаблон для основного js-скрипта, выполняемого на клиентах. Обычно выполняется без переменных и кешируется на клиентах.
    
Доступны переменные:
    
    - dkey. Например "vasya.ru"
    - isSiteAdmin. Если true, то значит этот юзер -- владелец сайта, и нужно ему отобразить редактор.
    - uSettings - Доступ к пользовательским настройкам сайта. Бывш. domain_data.
      !!! uSettings считывается из хранилища асинхронно, поэтому для ускорения рендера желательно обращаться к нему как можно позднее.
    - ctx. Контекст, в котором так же имеется timestamp.

TODO:
    
    - Переписать на coffeescript, исправив текущие ошибки компиляции.

    - Переписать, разбивая код на модули, которые распихиваются по другим шаблонам и инклюдятся.
      Например, редактор настроек должен быть в отдельном шаблоне, а поисковая часть и её рендереры -- в других шаблонах, инстраллеры - в третьих.
      main.scala.html должен содержать лишь глобальные переменные и код, дергающий другие шаблоны и собирающий необходимый скрипт из желаемых кусков.

    - Заюзать статический routes и javascriptRouter для вычисления адресов запросов к suggest.io, а НЕ генерировать ссылки руками.
      http://www.playframework.com/documentation/2.1.0/ScalaJavascriptRouting
      Embedded router создаст необходимый объект (например "jsRoutes"), затем можно будет через него динамические получать ссылки, методы или сразу делать запросы.
      JS-роутеры в разных шаблонах должны быть у каждого свои + в шаблонах можно заюзать один глобальный js-роутер из верхнего шаблона.
      Это также относится к вебсокет-ссылкам.

    - Сообщения на разных языках вынести в conf/messages. JSON-объекты сообщений сформировать через вызов Messages(), обернув в cache для ускорения генерации.

    - Отрабатывать ситуацию, когда юзер добавил вызов скрипта на страницу дважды
    - -//- когда юзер добавил вызов скрипта в head
    - не отображать настройки если юзер зашел с мобилы

*@

@import ctx._
@* нельзя import uSettings._ , ибо будет конфликт dkey *@
@import uSettings.showImages
@import uSettings.renderer
@import util.CoffeeScriptTemplate._
@import views.txt.js._

@coffee{

sio =
  config :
    host : "http://@request.host"
    css_href : "/assets/stylesheets/sio.v8.min.css"
    searchRequestDelay : 500
    search_field_dom_depth : 3
    debug_hash : 'sio_debug'
    dkey : window.location.hostname
    dkey_debug : 'ldpr.ru'

window.sio = sio

@_utils()
@_search()
@_templates()

## Загрузить css
utils.load_css sio.config.host + sio.config.css_href

## Если юзер является админом — отрендерить настройки
@if(isSiteAdmin){
  @_preferences()
}

@* Отрендерить инсталлер, если qi_id задан *@
@qiIdOpt.map { qi_id =>
  @_install(dkey, qi_id, wsTimestamp) }
}
