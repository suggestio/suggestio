version: '2'

## docker-compose спека для сборки pod/service-файлов kubernetes.
## Употребление спеки напрямую (через docker-compose up) возможно,
## хоть и выглядит топорно.
##
## depends-on: не поддерживается kubernetes, и малополезен в docker-compose,
## поэтому depends-on закоменчена.

services:

  ## seaweedfs
  swfs-master:
    image: docker.suggest.io:5000/sio/seaweedfs
    #ports:
    #- 9333:9333
    #- 19333:19333
    expose:
    - 9333
    - 19333
    command: "master"
  swfs-volume:
    image: docker.suggest.io:5000/sio/seaweedfs
    #ports:
    #- 8080:8080
    #- 18080:18080
    expose:
    - 8080
    - 18080
    command: 'volume -max=15 -mserver="swfs-master:9333" -port=8081'
    #depends-on:
    #- swfs-master
  swfs-filer:
    image: docker.suggest.io:5000/sio/seaweedfs
    #ports:
    #- 8888:8888
    #- 18888:18888
    expose:
    - 8888
    - 18888
    command: 'filer -master="swfs-master:9333"'
    tty: true
    #stdin-open: true
    #depends-on:
    #- swfs-master
    #- swfs-volume
  swfs-cronjob:
    image: docker.suggest.io:5000/sio/seaweedfs
    command: 'cronjob'
    environment:
      # Run re-replication every N minutes
      CRON-SCHEDULE: '*/3 * * * * *' # Default: '*/5 * * * * *'
      WEED-MASTER: swfs-master:9333 # Default: localhost:9333
    #depends-on:
    #- swfs-master
    #- swfs-volume
  
  ## postgresql
  pg-master:
    image: 'docker.suggest.io:5000/sio/postgresql'
    restart: 'on-failure'
    environment:
      POSTGRES-USER: 'postgres'
      POSTGRES-PASSWORD: 'postgres'
    expose:
     - 5432
  pg-slave:
    image: 'docker.suggest.io:5000/sio/postgresql'
    restart: 'on-failure'
    environment:
      POSTGRES-USER: 'postgres'
      POSTGRES-PASSWORD: 'postgres'
      REPLICATE-FROM: 'pg-master'
    expose:
     - 5432
    #depends-on:
    #- pg-master

  clamav:
    image: docker.suggest.io:5000/sio/clamav
    restart: 'on-failure'
    expose:
      - 3310
  
  docker-registry:
    image: docker.suggest.io:5000/sio/docker-registry
    restart: 'on-failure'
    ports:
    - 5000:5000

  elasticsearch:
    image: docker.suggest.io:5000/sio/elasticsearch
    restart: 'on-failure'
    expose:
      - 9200
      - 9300

  artifactory:
    image: docker.suggest.io:5000/sio/artifactory
    restart: 'on-failure'
    ports:
    - 8081:8081

  jenkins:
    image: docker.suggest.io:5000/sio/jenkins
    restart: 'on-failure'
    ports:
    - 8090:8090
    expose:
    - 50000
    #depends-on:
    #- docker-registry
    #- artifactory

  www:
    image: docker.suggest.io:5000/sio/www
    restart: 'on-failure'
    command: "-Des.client.transport.addrs=elasticsearch:9300 -Dswfs.masters=swfs-master:9333 -Dslick.dbs.default.db.hostport=pg-master:5432,pg-slave:5432"
    ports:
      - 9000:9000
    #depends-on:
    #  - swfs-master
    #  - swfs-volume
    #  - elasticsearch
    #  - clamav
    #  - pg-master
    #  - pg-slave

