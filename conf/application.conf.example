# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret="t6]=<]3/5pf19dTae_K?_DemwXGVK12<:6tnlL^7vVV9q>ZW<]jhh8[pH]YIJY=8"

# The application languages
# ~~~~~
application.langs="en,ru"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Router 
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point. 
# Furthermore, it's assumed your route file is named properly. 
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

# Database configuration
# ~~~~~ 
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.user=sa
# db.default.password=""

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG


# name of username cookie
session.username=p

# Siobix web crawler integration
# ~~~~~
# dfs.dir: dfs address for filesystem connection; URI. See util.SiobixFs
siobix.dfs.dir=/home/user/projects/sio/2/bixo/dout


###############################################################################
## EMAIL
###############################################################################
smtp.host="192.168.101.9"
#smtp.port=465
##smtp.ssl=yes
smtp.user="no-reply@suggest.io"
smtp.password="BedCenEnakJidLilfEp"


###############################################################################
## Akka
###############################################################################
## TODO Use akka clustering instead of remoting in future.
akka {
 actor {
  provider = "akka.remote.RemoteActorRefProvider"
 }
 remote {
  enabled-transports = ["akka.remote.netty.tcp"]
  netty.tcp {
   hostname = "127.0.0.1"
   port = 2552
  }
 }
}


###############################################################################
## Общение с siobix-нодой.
###############################################################################
## akka url до супервизора кравлера. Меняется в зависимости от deployment'а.
siobix.akka.url.prefix="akka.tcp://application@127.0.0.1:2553"

## akka путь до супервизора кравлеров.
siobix.akka.path.crawler.sup="/user/sup/crawlers"

## Сколько времени ждать ответа от кравлера по поводу добавления нового сайта. [2000]
siobix.akka.bootstrap.ask_timeout_ms = 2500


###############################################################################
## Domain Requester (подсистема валидации сайтов)
###############################################################################
## Set the maximum time in millisecond an AsyncHttpClient wait for a response. [15000]
domain.requester.http.request.timeout_ms = 15000

## Maximum time in millisecond an AsyncHttpClient will keep connection idle in pool. [5000]
domain.requester.pool.idle.timeout_ms = 5000

## Maximum number of connections per hosts an AsyncHttpClient can handle. [1]
domain.requester.pool.max_per_host = 1

## Maximum number of connections an AsyncHttpClient can handle. [5]
domain.requester.pool.max_size = 5


###############################################################################
## Mozilla Persona (Login)
###############################################################################
# Куда редиректить юзера после авторизации в persona. Обязательный параметр.
persona.audience.url = "http://localhost:9000"
#persona.audience.url = "https://suggest.io:443"

# Через какой сервис проверять сессию юзера. [https://verifier.login.persona.org/verify]
persona.verify.url = "https://verifier.login.persona.org/verify"


###############################################################################
## DomainQi
###############################################################################
# Сколько времени максимум можно парсить страницу, возвращенную сайтом. [5000]
domain.qi.parse.timeout_ms = 5000

# Длина qi-идентификатора. Следует менять только при острой необходимости и с осторожностью. [8]
#domain.qi.id.len = 8


